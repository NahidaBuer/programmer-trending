"""
This type stub file was generated by pyright.
"""

from apscheduler.triggers.base import BaseTrigger

class IntervalTrigger(BaseTrigger):
    """
    Triggers on specified intervals, starting on ``start_date`` if specified, ``datetime.now()`` +
    interval otherwise.

    :param int weeks: number of weeks to wait
    :param int days: number of days to wait
    :param int hours: number of hours to wait
    :param int minutes: number of minutes to wait
    :param int seconds: number of seconds to wait
    :param datetime|str start_date: starting point for the interval calculation
    :param datetime|str end_date: latest possible date/time to trigger on
    :param datetime.tzinfo|str timezone: time zone to use for the date/time calculations
    :param int|None jitter: delay the job execution by ``jitter`` seconds at most
    """
    __slots__ = ...
    def __init__(self, weeks=..., days=..., hours=..., minutes=..., seconds=..., start_date=..., end_date=..., timezone=..., jitter=...) -> None:
        ...
    
    def get_next_fire_time(self, previous_fire_time, now): # -> datetime | None:
        ...
    
    def __getstate__(self): # -> dict[str, int | timezone | ZoneInfo | tzinfo | datetime | Any | timedelta | None]:
        ...
    
    def __setstate__(self, state): # -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


